#Makefile include include.mk.opt
# This file must added to ED/build/make/include.mk.pic on pic 
# inorder to properlly build on ed on pic.  
############################## Change Log ##################################
# 1.0.0.2
#
# 000908 MJB include.mk-mrc ##
#            Added MAKE environment varaible.
#            Added free format option to F_OPTS for some platforms. ##
# 000907 MJB include.mk-mrc ##
#            Changed the defualts to no NCAR Graphics and no parallel.
#            Also commented out the machine specifics to force the user to
#            select the appropriate machine for them. ##
# 000823 MJB include.mk-mrc ##
#            New - defines all make environment varaibles and is included
#            in all make files. ##
#
############################################################################
# Define make (gnu make works best).
MAKE=/usr/bin/make
# libraries.
BASE=$(ED_ROOT)/build/
# Activate appropriate parts below, comment out others.
#---------------------------------------------------------------
# If you are using a real distribution of NCAR Graphics...
#NCARG_DIR=/usr/local/ncarg-4.3.0/lib
#LIBNCARG=-L$(NCARG_DIR) -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib -lX11 -ldl
#---------------------------------------------------------------
# HDF libraries  -----------------------------------------------
# HDF4 library: Instructions to install: www.cptec.inpe.br/brams
# If you run "configure" script, you don't need to edit line bellow
#HDF_LIBS=-L.hdf4_libs -lmfhdf -ldf -lz -ljpeg -lsz
# --------------------------------------------------------------
# HDF 5  Libraries
HDF5_HOME=/qfs/projects/forteproject/custom-hdf5/
HDF5_INCS=-I${HDF5_HOME}/include
HDF5C_INCS=-I${HDF5_HOME}/include
HDF5_LIBS=-L${HDF5_HOME}/lib -lhdf5 -lhdf5_fortran -lhdf5_hl -lz
USE_COLLECTIVE_MPIO=0
#---------------------------------------------------------------
# netCDF libraries ---------------------------------------------
# If you have netCDF set USENC=1 and type the lib folder
# at NC_LIBS, with the leading -L (e.g. -L/usr/local/lib).
# If you don't have it, leave USENC=0 and type a dummy
# folder for NC_LIBS (e.g. -L/dev/null or leave it blank)
USENC=0
NC_LIBS=-L/dev/null
# --------------------------------------------------------------
# interface ----------------------------------------------------
# This should be 1 unless you are running with -gen-interfaces.
# Interfaces usually make the compilation to crash when the
# -gen-interfaces option are on, so this flag bypass all
# interfaces in the code.
USE_INTERF=1
# MPI_Wtime. ---------------------------------------------------
# If USE_MPIWTIME=1, then it will use MPI libraries to compute
# the wall time (the only double-precision intrinsic).  In case
# you don't have it, leave USE_MPIWTIME=0, in which case it will
# use a simpler, single-precision function.
USE_MPIWTIME=0
# GFORTRAN DEVELOPERS: REMOVE ffree-line-length-0
# CODE IS INTENDED TO BE LINE WIDTH COMPLIANT WITHIN 132
#----------------- gfortran on Linux -----------
CMACH=PC_GFORTRAN
FC_TYPE=GNU
F_COMP=gfortran
C_COMP=gcc
LOADER=gfortran
##################################### COMPILER OPTIONS #####################################
#------------------------------------------------------------------------------------------#
# A/B/C/D. Debugging, strictest compilation flags, lowest performance.                     #
# E.       Running, most relaxed compilation flags, highest performance.                   #
#------------------------------------------------------------------------------------------#
ifeq ($(KIND_COMP),)
   KIND_COMP=E
endif
ifeq ($(KIND_COMP),$(filter $(KIND_COMP), A B C D))
   F_OPTS=-g -ffree-line-length-none -fno-whole-file -O0 -ffpe-trap=invalid,zero,overflow -fbounds-check #-std=f2003
   C_OPTS=-g -O0 -ffpe-trap=invalid,zero,overflow -fbounds-check
   LOADER_OPTS=${F_OPTS}
endif
ifeq ($(KIND_COMP),E)
   F_OPTS=-g -ffree-line-length-none -fno-whole-file -O2 #-ffpe-trap=invalid,zero,overflow -fbounds-check  #-O2
   C_OPTS=-g -O2 #-ffpe-trap=invalid,zero,overflow -fbounds-check #-O2
   LOADER_OPTS=${F_OPTS}
endif
LIBS=
MOD_EXT=mod
# Ancillary Compiler options
#USE_INTERF=1
#F_OPTS= -ffree-form -O3 -fconvert=little-endian -frecord-marker=4
#C_OPTS= -O3 -DLITTLE
#LOADER_OPTS= -ffree-form -O3 -fconvert=little-endian -frecord-marker=4
#C_LOADER_OPTS=-v
# If compiling for a single-CPU platform only (without MPI):
#-----------------------------------------------------------------
#PAR_LIBS=
#PAR_DEFS=
#-----------------------------------------------------------------
# Else if using MPI libraries:
#---------------If using scritps 'mpicc' e 'mpif90'---------------'
# MPI_PATH=
# PAR_INCS=
# PAR_LIBS=
# PAR_DEFS=-DRAMS_MPI
#-----------------------------------------------------------------
ARCHIVE=ar rs
